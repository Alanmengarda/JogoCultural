const translations = {
  pt: {
    // T√≠tulos principais
    gameTitle: "JOGO CULTURAL",
    flagGameTitle: "üß© Quebra-cabe√ßa de Bandeiras",
    
    // Controles do jogo
    language: "Idioma",
    difficulty: "Dificuldade",
    easyLevel: "üü¢ F√°cil (5 pts)",
    normalLevel: "üü° Normal (10 pts)",
    hardLevel: "üî¥ Dif√≠cil (20 pts)",
    
    // Bot√µes
    nextQuestion: "Pr√≥xima Pergunta ‚Üí",
    playAgain: "üîÑ Jogar Novamente",
    saveScore: "üíæ Salvar Pontua√ß√£o",
    flagGame: "üß© Jogo das Bandeiras",
    backToMain: "‚Üê Voltar ao Jogo Principal",
    restart: "üîÑ Reiniciar Jogo",
    nextFlag: "‚û°Ô∏è Pr√≥xima Bandeira",
    
    // Ranking
    ranking: "üèÜ RANKING",
    
    // Progresso
    progress: "üìä PROGRESSO",
    level: "N√≠vel:",
    question: "Pergunta:",
    remaining: "Restantes:",
    points: "Pontos:",
    complete: "Completo",
    
    // Estat√≠sticas
    statistics: "üìä ESTAT√çSTICAS",
    flag: "Bandeira:",
    hits: "Acertos:",
    hitRate: "Taxa de Acerto:",
    performance: "üìà DESEMPENHO POR TEMA",
    focusOn: "üí° Foque em:",
    
    // Resultados
    gameOver: "üéØ Fim do Jogo!",
    finalScore: "Sua pontua√ß√£o final:",
    enterName: "Digite seu nome",
    bonusGame: "üéÆ Jogar Mini-game B√¥nus üáßüá∑",
    
    // Respostas
    correctAnswer: "‚úÖ Resposta correta!",
    wrongAnswer: "‚ùå Resposta errada!",
    correctWas: "A correta era:",
    
    // Mini-jogo
    puzzleDescription: "Arraste as pe√ßas da imagem real da bandeira para montar o quebra-cabe√ßa",
    puzzlePieces: "üéØ Pe√ßas do Quebra-cabe√ßa",
    assembleFlag: "üèÅ Monte a Bandeira",
    flagComplete: "‚úÖ Bandeira Completa!",
    levelComplete: "üéâ N√≠vel {level} Completo!",
    flagsAssembled: "Bandeiras Montadas",
    perfect: "üèÜ Perfeito! Voc√™ √© um expert em bandeiras!",
    excellent: "‚≠ê Excelente! Muito bem jogado!",
    goodJob: "üëç Bom trabalho! Continue praticando!",
    
    // Mensagens do sistema
    scoreSaved: "Pontua√ß√£o salva com sucesso! üéâ\nSeus pontos foram somados ao seu total no ranking!",
    alreadySaved: "Voc√™ j√° salvou sua pontua√ß√£o! Reinicie o jogo para jogar novamente.",
    scoreSavedSuccess: "‚úÖ Pontua√ß√£o salva com sucesso!",
    pointsAdded: "Seus pontos foram somados ao ranking. Reinicie para jogar novamente.",
    alreadySavedMessage: "‚úÖ Pontua√ß√£o j√° foi salva!\nReinicie o jogo para jogar novamente.",
    
    // N√≠veis de dificuldade do mini-jogo
    easyMini: "üü¢ F√°cil (4 pe√ßas)",
    normalMini: "üü° Normal (4 pe√ßas)",
    hardMini: "üî¥ Dif√≠cil (4 pe√ßas)",
    
    // Temas sem tradu√ß√£o (mantidos como est√£o)
    noThemeAnswered: "Nenhum tema respondido ainda"
  },
  
  en: {
    // Main titles
    gameTitle: "CULTURAL GAME",
    flagGameTitle: "üß© Flag Puzzle",
    
    // Game controls
    language: "Language",
    difficulty: "Difficulty",
    easyLevel: "üü¢ Easy (5 pts)",
    normalLevel: "üü° Normal (10 pts)",
    hardLevel: "üî¥ Hard (20 pts)",
    
    // Buttons
    nextQuestion: "Next Question ‚Üí",
    playAgain: "üîÑ Play Again",
    saveScore: "üíæ Save Score",
    flagGame: "üß© Flag Game",
    backToMain: "‚Üê Back to Main Game",
    restart: "üîÑ Restart Game",
    nextFlag: "‚û°Ô∏è Next Flag",
    
    // Ranking
    ranking: "üèÜ RANKING",
    
    // Progress
    progress: "üìä PROGRESS",
    level: "Level:",
    question: "Question:",
    remaining: "Remaining:",
    points: "Points:",
    complete: "Complete",
    
    // Statistics
    statistics: "üìä STATISTICS",
    flag: "Flag:",
    hits: "Hits:",
    hitRate: "Hit Rate:",
    performance: "üìà PERFORMANCE BY THEME",
    focusOn: "üí° Focus on:",
    
    // Results
    gameOver: "üéØ Game Over!",
    finalScore: "Your final score:",
    enterName: "Enter your name",
    bonusGame: "üéÆ Play Bonus Mini-game üá∫üá∏",
    
    // Answers
    correctAnswer: "‚úÖ Correct answer!",
    wrongAnswer: "‚ùå Wrong answer!",
    correctWas: "The correct one was:",
    
    // Mini-game
    puzzleDescription: "Drag the pieces from the real flag image to assemble the puzzle",
    puzzlePieces: "üéØ Puzzle Pieces",
    assembleFlag: "üèÅ Assemble the Flag",
    flagComplete: "‚úÖ Flag Complete!",
    levelComplete: "üéâ Level {level} Complete!",
    flagsAssembled: "Flags Assembled",
    perfect: "üèÜ Perfect! You are a flag expert!",
    excellent: "‚≠ê Excellent! Very well played!",
    goodJob: "üëç Good job! Keep practicing!",
    
    // System messages
    scoreSaved: "Score saved successfully! üéâ\nYour points have been added to your total in the ranking!",
    alreadySaved: "You have already saved your score! Restart the game to play again.",
    scoreSavedSuccess: "‚úÖ Score saved successfully!",
    pointsAdded: "Your points have been added to the ranking. Restart to play again.",
    alreadySavedMessage: "‚úÖ Score already saved!\nRestart the game to play again.",
    
    // Mini-game difficulty levels
    easyMini: "üü¢ Easy (4 pieces)",
    normalMini: "üü° Normal (4 pieces)",
    hardMini: "üî¥ Hard (4 pieces)",
    
    // Themes
    noThemeAnswered: "No theme answered yet"
  },
  
  es: {
    // T√≠tulos principales
    gameTitle: "JUEGO CULTURAL",
    flagGameTitle: "üß© Rompecabezas de Banderas",
    
    // Controles del juego
    language: "Idioma",
    difficulty: "Dificultad",
    easyLevel: "üü¢ F√°cil (5 pts)",
    normalLevel: "üü° Normal (10 pts)",
    hardLevel: "üî¥ Dif√≠cil (20 pts)",
    
    // Botones
    nextQuestion: "Siguiente Pregunta ‚Üí",
    playAgain: "üîÑ Jugar de Nuevo",
    saveScore: "üíæ Guardar Puntuaci√≥n",
    flagGame: "üß© Juego de Banderas",
    backToMain: "‚Üê Volver al Juego Principal",
    restart: "üîÑ Reiniciar Juego",
    nextFlag: "‚û°Ô∏è Siguiente Bandera",
    
    // Ranking
    ranking: "üèÜ RANKING",
    
    // Progreso
    progress: "üìä PROGRESO",
    level: "Nivel:",
    question: "Pregunta:",
    remaining: "Restantes:",
    points: "Puntos:",
    complete: "Completo",
    
    // Estad√≠sticas
    statistics: "üìä ESTAD√çSTICAS",
    flag: "Bandera:",
    hits: "Aciertos:",
    hitRate: "Tasa de Acierto:",
    performance: "üìà RENDIMIENTO POR TEMA",
    focusOn: "üí° Enf√≥cate en:",
    
    // Resultados
    gameOver: "üéØ ¬°Fin del Juego!",
    finalScore: "Tu puntuaci√≥n final:",
    enterName: "Ingresa tu nombre",
    bonusGame: "üéÆ Jugar Mini-juego Bonus üá™üá∏",
    
    // Respuestas
    correctAnswer: "‚úÖ ¬°Respuesta correcta!",
    wrongAnswer: "‚ùå ¬°Respuesta incorrecta!",
    correctWas: "La correcta era:",
    
    // Mini-juego
    puzzleDescription: "Arrastra las piezas de la imagen real de la bandera para armar el rompecabezas",
    puzzlePieces: "üéØ Piezas del Rompecabezas",
    assembleFlag: "üèÅ Arma la Bandera",
    flagComplete: "‚úÖ ¬°Bandera Completa!",
    levelComplete: "üéâ ¬°Nivel {level} Completo!",
    flagsAssembled: "Banderas Armadas",
    perfect: "üèÜ ¬°Perfecto! ¬°Eres un experto en banderas!",
    excellent: "‚≠ê ¬°Excelente! ¬°Muy bien jugado!",
    goodJob: "üëç ¬°Buen trabajo! ¬°Sigue practicando!",
    
    // Mensajes del sistema
    scoreSaved: "¬°Puntuaci√≥n guardada con √©xito! üéâ\n¬°Tus puntos han sido sumados a tu total en el ranking!",
    alreadySaved: "¬°Ya has guardado tu puntuaci√≥n! Reinicia el juego para jugar de nuevo.",
    scoreSavedSuccess: "‚úÖ ¬°Puntuaci√≥n guardada con √©xito!",
    pointsAdded: "Tus puntos han sido sumados al ranking. Reinicia para jugar de nuevo.",
    alreadySavedMessage: "‚úÖ ¬°Puntuaci√≥n ya guardada!\nReinicia el juego para jugar de nuevo.",
    
    // Niveles de dificultad del mini-juego
    easyMini: "üü¢ F√°cil (4 piezas)",
    normalMini: "üü° Normal (4 piezas)",
    hardMini: "üî¥ Dif√≠cil (4 piezas)",
    
    // Temas
    noThemeAnswered: "Ning√∫n tema respondido a√∫n"
  }
};

// Fun√ß√£o para obter tradu√ß√£o
function t(key, params = {}) {
  const currentLang = document.getElementById("idioma")?.value || 'pt';
  let translation = translations[currentLang][key] || translations['pt'][key] || key;
  
  // Substituir par√¢metros na tradu√ß√£o
  Object.keys(params).forEach(param => {
    translation = translation.replace(`{${param}}`, params[param]);
  });
  
  return translation;
}

// Fun√ß√£o para atualizar toda a interface
function updateInterface() {
  const currentLang = document.getElementById("idioma")?.value || 'pt';
  
  // Atualizar t√≠tulo principal
  const mainTitle = document.querySelector('h1');
  if (mainTitle) {
    mainTitle.textContent = t('gameTitle');
  }
  
  // Atualizar labels dos controles
  const languageLabel = document.querySelector('label[for="idioma"]');
  if (languageLabel) {
    languageLabel.textContent = t('language');
  }
  
  const difficultyLabel = document.querySelector('label[for="dificuldade"]');
  if (difficultyLabel) {
    difficultyLabel.textContent = t('difficulty');
  }
  
  // Atualizar op√ß√µes de dificuldade
  const difficultySelect = document.getElementById('dificuldade');
  if (difficultySelect) {
    const options = difficultySelect.querySelectorAll('option');
    if (options.length >= 3) {
      options[0].textContent = t('easyLevel');
      options[1].textContent = t('normalLevel');
      options[2].textContent = t('hardLevel');
    }
  }
  
  // Atualizar bot√µes
  const nextButton = document.getElementById('proximo');
  if (nextButton) {
    nextButton.textContent = t('nextQuestion');
  }
  
  const saveButton = document.getElementById('botao-salvar');
  if (saveButton) {
    saveButton.textContent = t('saveScore');
  }
  
  const playAgainButtons = document.querySelectorAll('button[onclick="reiniciarJogo()"]');
  playAgainButtons.forEach(btn => {
    btn.textContent = t('playAgain');
  });
  
  // Atualizar bot√£o do mini-jogo
  const flagGameButton = document.querySelector('.botao-minijogo');
  if (flagGameButton) {
    flagGameButton.textContent = t('flagGame');
  }
  
  // Atualizar placeholder do input de nome
  const nameInput = document.getElementById('nome-jogador');
  if (nameInput) {
    nameInput.placeholder = t('enterName');
  }
  
  // Atualizar link bonus
  const bonusLink = document.getElementById('link-bonus');
  if (bonusLink) {
    bonusLink.textContent = t('bonusGame');
  }
  
  // Atualizar t√≠tulo do ranking
  const rankingTitle = document.querySelector('.ranking-sidebar h3');
  if (rankingTitle) {
    rankingTitle.textContent = t('ranking');
  }
  
  // Atualizar textos de resultado
  const gameOverTitle = document.querySelector('#resultado h2');
  if (gameOverTitle) {
    gameOverTitle.textContent = t('gameOver');
  }
  
  const finalScoreText = document.querySelector('#resultado p');
  if (finalScoreText && finalScoreText.textContent.includes('pontua√ß√£o') || finalScoreText.textContent.includes('score') || finalScoreText.textContent.includes('puntuaci√≥n')) {
    finalScoreText.textContent = t('finalScore');
  }
  
  // For√ßar atualiza√ß√£o dos pain√©is se estiverem vis√≠veis
  if (typeof atualizarPainelProgresso === 'function') {
    atualizarPainelProgresso();
  }
  
  if (typeof atualizarGraficoTemas === 'function') {
    atualizarGraficoTemas();
  }
}

// Fun√ß√£o para obter texto de dificuldade
function getDifficultyText(difficulty) {
  const difficultyTexts = {
    'facil': {
      'pt': 'üü¢ F√°cil',
      'en': 'üü¢ Easy',
      'es': 'üü¢ F√°cil'
    },
    'normal': {
      'pt': 'üü° Normal',
      'en': 'üü° Normal',
      'es': 'üü° Normal'
    },
    'dificil': {
      'pt': 'üî¥ Dif√≠cil',
      'en': 'üî¥ Hard',
      'es': 'üî¥ Dif√≠cil'
    }
  };
  
  const currentLang = document.getElementById("idioma")?.value || 'pt';
  return difficultyTexts[difficulty][currentLang] || difficultyTexts[difficulty]['pt'];
}